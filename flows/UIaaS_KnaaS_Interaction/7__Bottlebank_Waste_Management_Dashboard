[
    {
        "id": "227c356f.6f82e2",
        "type": "tab",
        "label": "7_Bottlebank_Waste_Management_Dashboard"
    },
    {
        "id": "3d13180c.da4bf8",
        "type": "inject",
        "z": "227c356f.6f82e2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 103.33332824707031,
        "y": 243.3333282470703,
        "wires": [
            [
                "5c791b4e.78e96c",
                "edc9dc90.9285a8",
                "49808f03.69e128"
            ]
        ]
    },
    {
        "id": "5c791b4e.78e96c",
        "type": "omiNodeV9",
        "z": "227c356f.6f82e2",
        "name": "BottleBank O-MI Node",
        "path_InfoItem": "https://biotope-omi.alpha.grandlyon.com/Objects/Organization:SigrenEa-V1.1.0",
        "token": "",
        "operations": "Read",
        "ttl": "40",
        "interval": "",
        "callback": "",
        "newest": "",
        "oldest": "",
        "begin": "",
        "end": "",
        "value": "",
        "reqID": "",
        "metadata": true,
        "readTypes": "read1time",
        "x": 322.9999694824219,
        "y": 295,
        "wires": [
            [
                "27ba0915.6130a6"
            ]
        ]
    },
    {
        "id": "27ba0915.6130a6",
        "type": "xml",
        "z": "227c356f.6f82e2",
        "name": "BottleBank O-DF structure to JSON",
        "attr": "",
        "chr": "",
        "x": 626.3332824707031,
        "y": 294,
        "wires": [
            [
                "61f39405.cea394"
            ]
        ]
    },
    {
        "id": "61f39405.cea394",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "Extract response from BottleBank O-MI Respnse",
        "func": "#taking response value \n#Note in response first is longitude --> 0 and latitude -->1\nimport copy\n\nresponse = msg[\"payload\"][\"omiEnvelope\"][\"response\"][0][\"result\"][0][\"return\"][0][\"$\"][\"returnCode\"];\nlistOfBottleBankItems = []\nbottleBankList = availableBB = []\nbottleBankProperty = bottleBankName = bottleBankMaxCapacity = bottleBankGlass = bottleBankWastePoint = bottleBankAvgFillingRatePerDay = bottleBankFillingLimit = None \nlongitude = latitude = name = statusBB = identifier = None \navgMax = avgMin = 0.0 \ntemp = [] \n\nif response == \"200\":\n    node.log(\"Extract Response O-MI Node: Success in reading O-MI Node Contents\")\n \n    bottleBankObject = msg[\"payload\"][\"omiEnvelope\"][\"response\"][0][\"result\"][0][\"msg\"][0][\"Objects\"][0][\"Object\"][0][\"Object\"];\n    \n    for items in bottleBankObject:\n        if items[\"$\"][\"type\"] == \"ssn:Deployment\" :\n            bottleBankList = items[\"Object\"] \n        elif items[\"$\"] == \"org:Site\" :\n            siteMetaData = items\n        \n\n    for nodes in bottleBankList:\n        if (\"Object\" in nodes) and (\"$\" in nodes): \n            if nodes[\"$\"][\"type\"]: \n                node.log(\"From the communcation device\")\n                nodeObject = nodes[\"Object\"][0][\"Object\"][0][\"Object\"]\n        \n        for things in nodeObject:\n            if (\"$\" in things) and (\"InfoItem\" in things) :\n                if things[\"$\"][\"type\"] == \"ssn:Property\":\n                    bottleBankProperty = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n                elif things['$'][\"type\"] == \"SWM:MaxCapacity\":\n                    bottleBankMaxCapacity = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n                elif things['$'][\"type\"] ==  \"SWM:Glass\":\n                    bottleBankGlass = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n                elif things['$'][\"type\"] ==  \"SWM:WastePoint\":\n                    for coords in  things[\"InfoItem\"]:\n                        if coords[\"$\"][\"name\"] == \"geo:lat\":\n                            latitude = coords[\"value\"][0][\"_\"]\n                        elif coords[\"$\"][\"name\"] == \"geo:long\":\n                            longitude = coords[\"value\"][0][\"_\"]\n                        elif coords[\"$\"][\"name\"] == \"schema:name\":\n                            name = coords[\"value\"][0][\"_\"]\n                        elif coords[\"$\"][\"name\"] == \"schema:identifier\":\n                            identifier = coords[\"value\"][0][\"_\"]\n                        \n                elif things['$'][\"type\"] ==  \"SWM:AvgFillingRatePerDay\":\n                    bottleBankAvgFillingRatePerDay = float(things[\"InfoItem\"][0][\"value\"][0][\"_\"])\n                elif things['$'][\"type\"] == \"SWM:FillingLimit\":\n                    bottleBankFillingLimit = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n          \n        if bottleBankAvgFillingRatePerDay == 0:\n            statusBB = 0\n        if bottleBankAvgFillingRatePerDay == 100:\n            statusBB = 4\n        if bottleBankAvgFillingRatePerDay == 50:\n            statusBB = 2\n        if bottleBankAvgFillingRatePerDay > 0 and bottleBankAvgFillingRatePerDay < 50:\n            statusBB = 1\n        if bottleBankAvgFillingRatePerDay > 50 and bottleBankAvgFillingRatePerDay < 100:\n            statusBB = 3\n        if bottleBankAvgFillingRatePerDay == -1:\n            statusBB = -1\n         \n        listOfBottleBankItems.append({\"Property\": bottleBankProperty, \"MaximumCapacity\": bottleBankMaxCapacity, \"Glass\": bottleBankGlass, \"AvgFillingRatePerDay\": bottleBankAvgFillingRatePerDay, \"FillingLimit\": bottleBankFillingLimit, \"lat\": latitude, \"lon\": longitude, \"name\": name, \"identifier\": identifier, \"status\": statusBB }) \n        availableBB.append({\"Property\": bottleBankProperty, \"MaximumCapacity\": bottleBankMaxCapacity, \"Glass\": bottleBankGlass, \"AvgFillingRatePerDay\": bottleBankAvgFillingRatePerDay, \"FillingLimit\": bottleBankFillingLimit, \"lat\": latitude, \"lon\": longitude, \"name\": name, \"identifier\": identifier }) \n\n        if( avgMax < float(bottleBankAvgFillingRatePerDay) ):\n            avgMax = float(bottleBankAvgFillingRatePerDay)\n        \n        if( avgMin > float(bottleBankAvgFillingRatePerDay) ):\n            avgMin = float(bottleBankAvgFillingRatePerDay)\n        \n        node.log(bottleBankAvgFillingRatePerDay);\n\n        bottleBankProperty = bottleBankName = bottleBankMaxCapacity = bottleBankGlass = bottleBankWastePoint = bottleBankAvgFillingRatePerDay = bottleBankFillingLimit = None \n        longitude = latitude = name = statusBB = identifier = None \n\n \nelse:\n    node.error(\"Extract Response O-MI Node: Failure in reading O-MI Node Contents\")\n\n\nmsg[\"payload\"] = listOfBottleBankItems\nmsg[\"centerAvg\"] = int((avgMax - avgMin)/2)\n\n#msg[\"payload\"] = coords\nreturn msg",
        "outputs": 1,
        "x": 619.1112518310547,
        "y": 343.8888969421387,
        "wires": [
            [
                "6e9c1cfc.18f50c",
                "c92107f6.8d9d18",
                "4a9fff38.b717a",
                "948b70b6.7af008",
                "8ef6ae99.985f2",
                "935ddde.bad7c2",
                "53b1c8b6.00ab2",
                "f49f0767.ccee18",
                "bcad55e.304ff28"
            ]
        ]
    },
    {
        "id": "b0fa0e9f.8bec9",
        "type": "worldmap",
        "z": "227c356f.6f82e2",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "path": "",
        "x": 2179,
        "y": 180,
        "wires": []
    },
    {
        "id": "6e9c1cfc.18f50c",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "parseForTheWorldMap",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 1933.2222290039062,
        "y": 297.11114501953125,
        "wires": [
            [
                "b0fa0e9f.8bec9"
            ]
        ]
    },
    {
        "id": "edc9dc90.9285a8",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "move and zoom",
        "func": "msg.payload = { command:{layer:\"Esri Terrain\",lat:61.0,lon:23.0,zoom:3} };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 318.33331298828125,
        "y": 187.6666522026062,
        "wires": [
            [
                "b0fa0e9f.8bec9"
            ]
        ]
    },
    {
        "id": "ff515f00.6e2758",
        "type": "inject",
        "z": "227c356f.6f82e2",
        "name": "Inject This First",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 124,
        "y": 187.55560302734375,
        "wires": [
            [
                "edc9dc90.9285a8"
            ]
        ]
    },
    {
        "id": "c92107f6.8d9d18",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "List Extraction for Most Used Bottlebanks",
        "func": "centerMsg = msg[\"centerAvg\"]\nlistOfBottleBankItems = []\n\n\nfor items in msg[\"payload\"]:\n    if int(items[\"AvgFillingRatePerDay\"]) > centerMsg:\n        listOfBottleBankItems.append({\"Property\": items[\"Property\"], \"MaximumCapacity\": items[\"MaximumCapacity\"], \"Glass\": items[\"Glass\"], \"AvgFillingRatePerDay\": items[\"AvgFillingRatePerDay\"], \"FillingLimit\": items[\"FillingLimit\"], \"lat\": items[\"lat\"], \"lon\": items[\"lon\"], \"name\": items[\"name\"], \"identifier\": items[\"identifier\"], \"status\": items[\"status\"] }) \n        \nmsg[\"payload\"] = listOfBottleBankItems\n\nmsg[\"mostUsedName\"] = True\nmsg[\"mostUsedAvailability\"] = True\nmsg[\"mostUsedStatus\"] = True\n\nmsg[\"default\"] = \"\"\n\nreturn msg",
        "outputs": 1,
        "x": 1021.666748046875,
        "y": 427.66668701171875,
        "wires": [
            [
                "e09aec99.7fc988",
                "3cedb773.2ae068"
            ]
        ]
    },
    {
        "id": "4a9fff38.b717a",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "List Extraction for Available Bottlebanks",
        "func": "msg[\"allUsedName\"] = True\nmsg[\"alltUsedAvailability\"] = True\nmsg[\"allUsedStatus\"] = True\n\nmsg[\"default\"] = \"\"\nreturn msg",
        "outputs": 1,
        "x": 1018.0001220703125,
        "y": 551,
        "wires": [
            [
                "3e86490a.aa555e"
            ]
        ]
    },
    {
        "id": "784445fa.7e3594",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "2a96a6b.e4a8f5a",
        "name": "Most Used Bottle Banks",
        "order": 0,
        "width": "12",
        "height": "10",
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n.status1{\n    color:#27ae60;\n}\n.status2{\n    color:#9fa8da;\n}\n.status3{\n    color:#3f51b5;\n}\n.status4{\n    color:#1a237e;\n}\n.status5{\n    color:#c0392b;\n}\n.status6{\n    color:#FFC007;\n}\n\n.tooltip {\n  position: relative;\n  display: inline-block;\n  \n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1000;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n}\n\n#wrapper {\n    display: table;\n    table-layout: fixed;\n    width:100%;\n    /* height:100px; */\n}\n#wrapper div {\n    display: table-cell;\n    /* height:100px; */\n}\n\ndiv.item {\n    vertical-align: top;\n    display: inline-block;\n    text-align: center;\n    width: 20%;\n    min-height: 8px;\n}\n\n/* Hover cell effect! */\n</style>\n<style>\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\" integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\" crossorigin=\"anonymous\">\n</style>\n\n<script>\n\n(function() {\n    \n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n             // Do something when msg arrives\n             scope.node = {\n              name : msg.default,\n             };\n            }\n    \n        });\n     \n    })(scope);\n    \n})();\n</script>\n  <div id=\"wrapper\">\n     <div id=\"one\">\n         <div class=\"item\">\n            <i class=\"fa fa-circle status1\" aria-hidden=\"true\"></i>\n            <span>Empty</span>\n        </div>\n     </div>\n     <div id=\"two\">\n         <div class=\"item\">\n            <i class=\"fa fa-circle status2\" aria-hidden=\"true\"></i>\n            <span>Less then Half</span>\n        </div>\n     </div>\n     <div id=\"three\">\n        <div class=\"item\">\n            <i class=\"fa fa-circle status3\" aria-hidden=\"true\"></i>\n            <span>Half</span>\n        </div>\n     </div>\n     <div id=\"four\">\n        <div class=\"item\">\n            <i class=\"fa fa-circle status4\" aria-hidden=\"true\"></i>\n            <span>More then Half</span>\n        </div>\n     </div>\n     <div id=\"five\">\n        <div class=\"item\">\n            <i class=\"fa fa-circle status5\" aria-hidden=\"true\"></i>\n            <span>Full</span>\n        </div>\n     </div>\n   </div>\n<form name=\"bbCitizenForm\" >\n    <br />\n<!-- <h5>Selected Road ID: {{node.name}}</h5> -->\n<table>\n<thead>\n  <tr>\n    <th></th>\n    <th><a ng-click=\"send({payload:['sort','name', msg.payload, node.name ]})\">{{msg.mostUsedName ? 'Name &#8593;' : 'Name &darr;' }}</a></th>\n    <th><a ng-click=\"send({payload:['sort','AvgFillingRatePerDay', msg.payload,  node.name ]})\">{{msg.mostUsedAvailability ? 'Availability &#8593;' : 'Availability &darr;' }}</a></th>\n    <th><a ng-click=\"send({payload:['sort','status', msg.payload, node.name ]})\">{{msg.mostUsedStatus ? 'Status &#8593;' : 'Status &darr;' }}</a></th>\n  </tr>\n</thead>\n  <tr ng-repeat=\"obj in msg.payload track by $index\">\n    <td>\n    <input type=\"radio\" ng-model=\"node.name\" value=\"{{obj.name}}\"  name=\"data\"  ng-change=\"send({payload:['radio', obj.name, obj, used ]})\"></td>\n    <td>{{ obj.name }}</td>\n    <td>{{ obj.AvgFillingRatePerDay }}</td>\n    <td ng-if=\"obj.status == 0\"><i class=\"fa fa-circle status1\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 1\"><i class=\"fa fa-circle status2\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 2\"><i class=\"fa fa-circle status3\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 3\"><i class=\"fa fa-circle status4\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 4\"><i class=\"fa fa-circle status5\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == -1 \"><i class=\"fa fa-exclamation-circle status6\" aria-hidden=\"true\"></i></td>\n  </tr>\n</table>\n </form>\n\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1561.4444580078125,
        "y": 425.4444580078125,
        "wires": [
            [
                "c78f07e9.d72fc",
                "adcc8463.948348",
                "1d670dd.880b1f2",
                "ade956d0.57aba",
                "a8cfc8f7.d6981"
            ]
        ]
    },
    {
        "id": "91e57ccb.c01528",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "36c537b8.bb60a",
        "name": "Most Unused Bottlebanks",
        "order": 0,
        "width": "12",
        "height": "10",
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\n\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n.status1{\n    color:#27ae60;\n}\n.status2{\n    color:#9fa8da;\n}\n.status3{\n    color:#3f51b5;\n}\n.status4{\n    color:#1a237e;\n}\n.status5{\n    color:#c0392b;\n}\n.status6{\n    color:#FFC007;\n}\n\n\n.tooltip {\n  position: relative;\n  display: inline-block;\n  \n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n}\n\n\n/* Hover cell effect! */\n</style>\n<style>\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\" integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\" crossorigin=\"anonymous\">\n</style>\n\n<script>\n\n(function() {\n    \n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n             // Do something when msg arrives\n             scope.node = {\n              name : msg.default,\n             };\n            }\n    \n        });\n     \n    })(scope);\n    \n})();\n</script>\n  <div id=\"wrapper\">\n     <div id=\"one\">\n         <div class=\"item\">\n            <i class=\"fa fa-circle status1\" aria-hidden=\"true\"></i>\n            <span>Empty</span>\n        </div>\n     </div>\n     <div id=\"two\">\n         <div class=\"item\">\n            <i class=\"fa fa-circle status2\" aria-hidden=\"true\"></i>\n            <span>Less then Half</span>\n        </div>\n     </div>\n     <div id=\"three\">\n        <div class=\"item\">\n            <i class=\"fa fa-circle status3\" aria-hidden=\"true\"></i>\n            <span>Half</span>\n        </div>\n     </div>\n     <div id=\"four\">\n        <div class=\"item\"  >\n            <i class=\"fa fa-circle status4\" aria-hidden=\"true\"></i>\n            <span>More then Half</span>\n        </div>\n     </div>\n     <div id=\"five\" >\n        <div class=\"item\">\n            <i class=\"fa fa-circle status5\" aria-hidden=\"true\"></i>\n            <span>Full</span>\n        </div>\n     </div>\n   </div>\n\n<form name=\"bbCitizenForm\" >\n    <br />\n<!-- <h5>Selected Road ID: {{node.name}}</h5> -->\n<table>\n<thead>\n  <tr>\n    <th></th>\n    <th><a ng-click=\"send({payload:['sort','name', msg.payload , node.name]})\">{{msg.mostUnUsedName ? 'Name &#8593;' : 'Name &darr;' }}</a></th>\n    <th><a ng-click=\"send({payload:['sort','AvgFillingRatePerDay', msg.payload , node.name]})\">{{msg.mostUnUsedAvailability ? 'Availability &#8593;' : 'Availability &darr;' }}</a></th>\n    <th><a ng-click=\"send({payload:['sort','status', msg.payload , node.name]})\">{{msg.mostUnUsedStatus ? 'Status &#8593;' : 'Status &darr;' }}</a></th>\n  </tr>\n</thead>\n  <tr ng-repeat=\"obj in msg.payload track by $index\">\n    <td>\n    <input type=\"radio\" ng-model=\"node.name\" value=\"{{obj.name}}\"  name=\"data\"  ng-change=\"send({payload:['radio', obj.name, obj, unused ]})\"></td>\n    <td>{{ obj.name }}</td>\n    <td>{{ obj.AvgFillingRatePerDay }}</td>\n    <td ng-if=\"obj.status == 0\"><i class=\"fa fa-circle status1\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 1\"><i class=\"fa fa-circle status2\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 2\"><i class=\"fa fa-circle status3\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 3\"><i class=\"fa fa-circle status4\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 4\"><i class=\"fa fa-circle status5\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == -1 \"><i class=\"fa fa-exclamation-circle status6\" aria-hidden=\"true\"></i></td>\n  </tr>\n</table>\n </form>\n\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1559.4444580078125,
        "y": 489.77777099609375,
        "wires": [
            [
                "c78f07e9.d72fc",
                "d296cd09.88c21",
                "ade956d0.57aba",
                "e99f16b5.8a45e",
                "a8cfc8f7.d6981"
            ]
        ]
    },
    {
        "id": "1c12b98c.0f8926",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "2bf5b08a.1fab",
        "name": "Available Bottlebanks",
        "order": 0,
        "width": "16",
        "height": "10",
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n    a {\n    }\n    a:hover {\n        color:#2AB672 ;\n    }\n\n.status1{\n    color:#27ae60;\n}\n.status2{\n    color:#9fa8da;\n}\n.status3{\n    color:#3f51b5;\n}\n.status4{\n    color:#1a237e;\n}\n.status5{\n    color:#c0392b;\n}\n.status6{\n    color:#FFC007;\n}\n\n.tooltip {\n  position: relative;\n  display: inline-block;\n  \n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n}\n\n\n/* Hover cell effect! */\n</style>\n<style>\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\" integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\" crossorigin=\"anonymous\">\n</style>\n\n<script>\n\n(function() {\n    \n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n             // Do something when msg arrives\n             scope.node = {\n              name : msg.default,\n             };\n            }\n    \n        });\n     \n    })(scope);\n    \n})();\n</script>\n  <div id=\"wrapper\">\n     <div id=\"one\">\n         <div class=\"item\">\n            <i class=\"fa fa-circle status1\" aria-hidden=\"true\"></i>\n            <span>Empty</span>\n        </div>\n     </div>\n     <div id=\"two\">\n         <div class=\"item\">\n            <i class=\"fa fa-circle status2\" aria-hidden=\"true\"></i>\n            <span>Less then Half</span>\n        </div>\n     </div>\n     <div id=\"three\">\n        <div class=\"item\">\n            <i class=\"fa fa-circle status3\" aria-hidden=\"true\"></i>\n            <span>Half</span>\n        </div>\n     </div>\n     <div id=\"four\">\n        <div class=\"item\">\n            <i class=\"fa fa-circle status4\" aria-hidden=\"true\"></i>\n            <span>More then Half</span>\n        </div>\n     </div>\n     <div id=\"five\">\n        <div class=\"item\">\n            <i class=\"fa fa-circle status5\" aria-hidden=\"true\"></i>\n            <span>Full</span>\n        </div>\n     </div>\n   </div>\n<form name=\"bbCitizenForm\" >\n    <br />\n<!-- <h5>Selected Road ID: {{node.name}}</h5> -->\n<table>\n<thead>\n  <tr>\n    <th></th>\n    <th><a ng-click=\"send({payload:['sort','name', msg.payload , node.name ]})\">{{msg.allUsedName ? 'Name &#8593;' : 'Name &darr;' }}</a></th>\n    <th><a ng-click=\"send({payload:['sort','AvgFillingRatePerDay', msg.payload , node.name ]})\">{{msg.alltUsedAvailability ? 'Availability &#8593;' : 'Availability &darr;' }}</a></th>\n    <th><a ng-click=\"send({payload:['sort','status',  msg.payload , node.name ]})\">{{msg.allUsedStatus ? 'Status &#8593;' : 'Status &darr;' }}</a></th>\n  </tr>\n</thead>\n  <tr ng-repeat=\"obj in msg.payload track by $index\">\n    <td>\n    <input type=\"radio\" ng-model=\"node.name\" value=\"{{obj.name}}\"  name=\"data\"  ng-change=\"send({payload:['radio', obj.name, obj, all ]})\"></td>\n    <td>{{ obj.name }}</td>\n    <td>{{ obj.AvgFillingRatePerDay }}</td>\n    <td ng-if=\"obj.status == 0\"><i class=\"fa fa-circle status1\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 1\"><i class=\"fa fa-circle status2\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 2\"><i class=\"fa fa-circle status3\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 3\"><i class=\"fa fa-circle status4\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == 4\"><i class=\"fa fa-circle status5\" aria-hidden=\"true\"></i></td>\n    <td ng-if=\"obj.status == -1 \"><i class=\"fa fa-exclamation-circle status6\" aria-hidden=\"true\"></i></td>\n  </tr>\n</table>\n </form>\n\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1554.111083984375,
        "y": 542.6666870117188,
        "wires": [
            [
                "33bb6dd6.cc819a",
                "c78f07e9.d72fc",
                "52d5b8db.086608",
                "1d670dd.880b1f2",
                "e99f16b5.8a45e",
                "a8cfc8f7.d6981"
            ]
        ]
    },
    {
        "id": "f11df28b.a82268",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "d11829dc.62b3a",
        "name": "Bottlebanks on Worldmap",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<iframe src=\"http://127.0.0.1:1880/worldmap/\" height=\"658\" width=\"1482\">\n <p>Your browser does not support iframes.</p>\n</iframe>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1555.77783203125,
        "y": 592.4444580078125,
        "wires": [
            []
        ]
    },
    {
        "id": "eb731dd2.cb6e98",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "bf26c53c.9645f8",
        "name": "Bottle Bank Information",
        "order": 0,
        "width": "8",
        "height": "10",
        "format": "<script>\n\n(function() {\n    \n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n             // Do something when msg arrives\n             scope.node = {\n              name : msg.payload.name,\n              identifier: msg.payload.identifier,\n              MaximumCapacity: msg.payload.MaximumCapacity, \n              FillingLimit: msg.payload.FillingLimit,\n              AvgFillingRatePerDay: msg.payload.AvgFillingRatePerDay , \n              lat: msg.payload.lon,\n              lon: msg.payload.lat\n             };\n            }\n    \n        });\n     \n    })(scope);\n    \n})();\n\n\n</script>\n\n<style type=\"text/css\" media=\"all\">\n    a {\n    }\n    a:hover {\n        color:#2AB672 ;\n    }\n    \n    #wrapper {\n    display: table;\n    table-layout: fixed;\n    width:100%;\n    height:100px;\n}\n#wrapper div {\n    display: table-cell;\n    height:100px;\n}\n\ndiv.item {\n    vertical-align: top;\n    display: inline-block;\n    text-align: center;\n    width: 33%;\n    min-height: 140px;\n}\ndiv.itemcustom{\n    padding-left:14px;\n}\n.icustom1 {\n    color: #2ecc71;\n    padding-bottom: 12px;\n}\n.icustom2 {\n    color: #34495e;\n    padding-bottom: 12px;\n}\n.icustom3 {\n    color: #1565c0;\n    padding-bottom: 12px;\n}\n.icustom4 {\n    color: #1976d2;\n    padding-bottom: 12px;\n}\n.icustom5 {\n    color: #1e88e5;\n    padding-bottom: 12px;\n}\n.caption {\n    display: block;\n}\n\n/* Reference From: \n   https://www.w3schools.com/css/css_tooltip.asp\n*/\n\n.tooltip {\n  position: relative;\n  display: inline-block;\n  \n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n}\n\n</style>\n\n<div>\n   <h2><a ng-click=\"send({payload:node.name})\" >{{node.name}}</a></h2>\n   <br /><br />\n   <div id=\"wrapper\">\n     <div id=\"one\">\n         <div class=\"item tooltip\">\n            <i class=\"fa fa-2x fa-map-marker icustom1\" aria-hidden=\"true\"></i>\n            <span class=\"caption\">lon: {{node.lon}}, lat: {{node.lat}}</span>\n            <span class=\"tooltiptext\">Geometric Coordinates of Favorite Location</span>\n        </div>\n     </div>\n     <div id=\"two\">\n         <div class=\"item tooltip\">\n            <i class=\"fa fa-2x fa-certificate icustom2\" aria-hidden=\"true\"></i>\n            <span class=\"caption\">{{node.identifier}}</span>\n            <span class=\"tooltiptext\">Identifier of the Favorite Location</span>\n        </div>\n     </div>\n     <div id=\"three\">\n        <div class=\"item tooltip\">\n            <i class=\"fa fa-2x fa-hourglass icustom3\" aria-hidden=\"true\"></i>\n            <span class=\"caption\">{{node.MaximumCapacity}}</span>\n            <span class=\"tooltiptext\">Maximum Capacity of the Bottle Bank</span>\n        </div>\n     </div>\n   </div>\n   <br /><br />\n   <div id=\"wrapper\">\n     <div id=\"one\">\n        <div class=\"item itemcustom tooltip\">\n            <i class=\"fa fa-2x  fa-hourglass-end  icustom4\" aria-hidden=\"true\"></i>\n            <span class=\"caption\">{{node.FillingLimit}}</span>\n            <span class=\"tooltiptext\">Filling Limit of the Bottle Bank</span>\n        </div>\n     </div>\n     <div id=\"two\">\n        <div class=\"item tooltip\">\n            <i class=\"fa fa-2x  fa-hourglass-half   icustom5\" aria-hidden=\"true\"></i>\n            <span class=\"caption\">{{node.AvgFillingRatePerDay}}</span>\n            <span class=\"tooltiptext\">Average Filling rate per day of the Bottle Bank</span>\n        </div>\n     </div>\n     <div id=\"three\"></div>\n   </div>\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 2373.77783203125,
        "y": 800.7777709960938,
        "wires": [
            [
                "17526246.ec0cc6",
                "f45243bc.04483"
            ]
        ]
    },
    {
        "id": "948b70b6.7af008",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "List Extraction for Most Unused Bottlebanks",
        "func": "centerMsg = msg[\"centerAvg\"]\nlistOfBottleBankItems = []\n\n\nfor items in msg[\"payload\"]:\n    if int(items[\"AvgFillingRatePerDay\"]) < centerMsg:\n        listOfBottleBankItems.append({\"Property\": items[\"Property\"], \"MaximumCapacity\": items[\"MaximumCapacity\"], \"Glass\": items[\"Glass\"], \"AvgFillingRatePerDay\": items[\"AvgFillingRatePerDay\"], \"FillingLimit\": items[\"FillingLimit\"], \"lat\": items[\"lat\"], \"lon\": items[\"lon\"], \"name\": items[\"name\"], \"identifier\": items[\"identifier\"], \"status\": items[\"status\"] }) \n        \nmsg[\"payload\"] = listOfBottleBankItems\n\nmsg[\"mostUnUsedName\"] = True\nmsg[\"mostUnUsedAvailability\"] = True\nmsg[\"mostUnUsedStatus\"] = True\n\nmsg[\"default\"] = \"\"\nreturn msg",
        "outputs": 1,
        "x": 1028.6666259765625,
        "y": 488,
        "wires": [
            [
                "e09aec99.7fc988",
                "c5572698.13ca6"
            ]
        ]
    },
    {
        "id": "8ef6ae99.985f2",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "Notification Extraction",
        "func": "listOfBottleBankItems = []\nnotificationCriterion = 20\nemptyNotification = 0 \nissueNotification = -1\n\nfor items in msg[\"payload\"]:\n    if int(items[\"AvgFillingRatePerDay\"]) > notificationCriterion:\n        listOfBottleBankItems.append({\"Property\": items[\"Property\"], \"MaximumCapacity\": items[\"MaximumCapacity\"], \"Glass\": items[\"Glass\"], \"AvgFillingRatePerDay\": items[\"AvgFillingRatePerDay\"], \"FillingLimit\": items[\"FillingLimit\"], \"lat\": items[\"lat\"], \"lon\": items[\"lon\"], \"name\": items[\"name\"], \"identifier\": items[\"identifier\"], \"status\": items[\"status\"], \"notification\" : \"emptyIt\" })\n    \n    if int(items[\"AvgFillingRatePerDay\"]) == emptyNotification:\n        listOfBottleBankItems.append({\"Property\": items[\"Property\"], \"MaximumCapacity\": items[\"MaximumCapacity\"], \"Glass\": items[\"Glass\"], \"AvgFillingRatePerDay\": items[\"AvgFillingRatePerDay\"], \"FillingLimit\": items[\"FillingLimit\"], \"lat\": items[\"lat\"], \"lon\": items[\"lon\"], \"name\": items[\"name\"], \"identifier\": items[\"identifier\"], \"status\": items[\"status\"], \"notification\" : \"empty\" })\n    \n    if int(items[\"AvgFillingRatePerDay\"]) == issueNotification:\n        listOfBottleBankItems.append({\"Property\": items[\"Property\"], \"MaximumCapacity\": items[\"MaximumCapacity\"], \"Glass\": items[\"Glass\"], \"AvgFillingRatePerDay\": items[\"AvgFillingRatePerDay\"], \"FillingLimit\": items[\"FillingLimit\"], \"lat\": items[\"lat\"], \"lon\": items[\"lon\"], \"name\": items[\"name\"], \"identifier\": items[\"identifier\"], \"status\": items[\"status\"], \"notification\" : \"issue\" })\n        \n        \nmsg[\"payload\"] = listOfBottleBankItems\n\nreturn msg",
        "outputs": 1,
        "x": 963.77783203125,
        "y": 638.9999389648438,
        "wires": [
            [
                "e09aec99.7fc988",
                "7dbce1be.d052a",
                "21c94b95.f4cb54"
            ]
        ]
    },
    {
        "id": "e09aec99.7fc988",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1335.5,
        "y": 228,
        "wires": []
    },
    {
        "id": "7dbce1be.d052a",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "fdbe1c8d.12372",
        "name": "Notifications",
        "order": 1,
        "width": "8",
        "height": "23",
        "format": "\n\n<script type=\"text/javascript\" charset=\"utf-8\">\n    /*\n    https://codepen.io/veronicadev/pen/LrZaov\n*/\njQuery(document).ready(function(){\n  jQuery('.toast__close').click(function(e){\n    e.preventDefault();\n    var parent = $(this).parent('.toast');\n    parent.fadeOut(\"slow\", function() { $(this).remove(); } );\n  });\n});\n</script>\n<style type=\"text/css\" media=\"all\">\n    @import url('https://fonts.googleapis.com/css?family=Raleway:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i');\n\nhtml, body{\n  height:100%;\n  width:100%;\n  font-family: 'Raleway', sans-serif;\n  background-color:#efefef;\n  display: table;\n  text-align: center;\n\n}\n\n.toast__container {\n    display: table-cell;\n    vertical-align: middle;\n}\n\n.toast__cell{\n  display:inline-block;\n}\n\n.add-margin{\n  margin-top:4px;\n}\n\n.toast__svg{\n  fill:#fff !important ;\n}\n\n.toast {\n  text-align:left;\n    padding: 21px 0;\n    background-color:#fff;\n    border-radius:4px;\n    max-width: 500px;\n    top: 0px;\n    position:relative;\n    /*box-shadow: 1px 7px 14px -5px rgba(0,0,0,0.2);*/\n    border-top: 1px solid #E0E0E0;\n    border-right: 1px solid #E0E0E0;\n    border-bottom: 1px solid #E0E0E0;\n}\n\n\n.toast:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n  border-top-left-radius:4px;\n  border-bottom-left-radius: 4px;\n\n}\n\n.toast__icon{\n  position:absolute;\n  top:50%;\n  left:22px;\n  transform:translateY(-50%);\n  width:14px;\n  height:14px;\n  padding: 7px;\n  border-radius:50%;\n  display:inline-block;\n}\n\n.toast__type {\n  color: #3e3e3e;\n  font-weight: 700;\n  margin-top: 0;\n  margin-bottom: 8px;\n  background-color: transparent !important ;\n}\n\n.toast__message {\n    font-size: 14px;\n    margin-top: 0;\n    margin-bottom: 0;\n    /* color: #878787; */\n  background-color: transparent !important ;\n    \n}\n\n.toast__content{\n  padding-left:70px;\n  padding-right:60px;\n}\n\n.toast__close {\n    position: absolute;\n    right: 22px;\n    top: 50%;\n    width: 14px;\n    cursor:pointer;\n    height: 14px;\n    fill:#fff;\n    color:#fff;\n    transform: translateY(-50%);\n}\n\n.toast--green .toast__icon{\n  background-color:#2BDE3F;\n}\n\n.toast--green:before{\n  background-color:#2BDE3F;\n}\n\n.toast--blue .toast__icon{\n  background-color:#c0392b;\n}\n\n.toast--blue:before{\n  background-color:#e74c3c;\n}\n\n.toast--yellow .toast__icon{\n  background-color:#FFC007;\n}\n\n.toast--yellow:before{\n  background-color:#FFC007;\n}\n\n.linkItem {\n    color:#212121 ;\n    text-decoration: none;\n}\n\n.linkItem:hover {\n    color:#53D798;\n}\n\n</style>\n<div >\n    <div class=\"toast__container\">\n        <div class=\"toast__cell\">\n            <div ng-repeat=\"obj in msg.payload track by $index\" >\n                <div ng-if=\"obj.notification == 'empty' \" class=\"toast toast--green ( obj.name != msg.payload[0].name ? add-margin : noMargin)\">\n                    <div class=\"toast__icon\">\n                        <svg version=\"1.1\" class=\"toast__svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\">\n                        <g><g><path d=\"M504.502,75.496c-9.997-9.998-26.205-9.998-36.204,0L161.594,382.203L43.702,264.311c-9.997-9.998-26.205-9.997-36.204,0    c-9.998,9.997-9.998,26.205,0,36.203l135.994,135.992c9.994,9.997,26.214,9.99,36.204,0L504.502,111.7    C514.5,101.703,514.499,85.494,504.502,75.496z\"></path>\n                    \t</g></g>\n                        </svg>\n                      </div>\n                      <div class=\"toast__content\">\n                        <!-- <p class=\"toast__type\" style=\"background-color:transparent !important;\">Success</p> -->\n                        <p class=\"toast__message\" style=\"background-color:transparent !important;\">The Bottlebank <a  class=\"linkItem\" ng-click=\"send({payload:obj.name})\"  href=\"#\">{{obj.name}}</a> is empty.</p>\n                      </div>\n                      <div class=\"toast__close\">\n                        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.642 15.642\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" enable-background=\"new 0 0 15.642 15.642\">\n                      <path fill-rule=\"evenodd\" d=\"M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z\"></path>\n                    </svg>\n                      </div>\n                </div>\n                <div ng-if=\"obj.notification == 'emptyIt' \" class=\"toast toast--blue ( obj.name != msg.payload[0].name ? add-margin : noMargin)\" >\n                    <div class=\"toast__icon\">\n                        <svg version=\"1.1\" class=\"toast__svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" style=\"enable-background:new 0 0 32 32;\" xml:space=\"preserve\">\n                        <g>\n                        \t<g id=\"info\">\n                        \t\t<g>\n                        \t\t\t<path  d=\"M10,16c1.105,0,2,0.895,2,2v8c0,1.105-0.895,2-2,2H8v4h16v-4h-1.992c-1.102,0-2-0.895-2-2L20,12H8     v4H10z\"></path>\n                        \t\t\t<circle  cx=\"16\" cy=\"4\" r=\"4\"></circle>\n                        \t\t</g>\n                        \t</g>\n                        </g>\n                        \n                            </svg>\n                    </div>\n                    <div class=\"toast__content\">\n                        <!-- <p class=\"toast__type\" style=\"background-color:transparent !important;\">Info</p> -->\n                        <p class=\"toast__message\" style=\"background-color:transparent !important;\">The Bottlebank <a  class=\"linkItem\" ng-click=\"send({payload:obj.name})\"  href=\"#\">{{obj.name}}</a> needs to be emptied.</p>\n                    </div>\n                    <div class=\"toast__close\">\n                        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.642 15.642\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" enable-background=\"new 0 0 15.642 15.642\">\n                        <path fill-rule=\"evenodd\" d=\"M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div ng-if=\"obj.notification == 'issue' \" class=\"toast toast--yellow ( obj.name != msg.payload[0].name ? add-margin : noMargin)\" >\n                    <div class=\"toast__icon\">\n                        <svg version=\"1.1\" class=\"toast__svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 301.691 301.691\" style=\"enable-background:new 0 0 301.691 301.691;\" xml:space=\"preserve\">\n                            <g>\n                        \t    <polygon points=\"119.151,0 129.6,218.406 172.06,218.406 182.54,0  \"></polygon>\n                        \t    <rect x=\"130.563\" y=\"261.168\" width=\"40.525\" height=\"40.523\"></rect>\n                            </g>\n                        </svg>\n                    </div>\n                    <div class=\"toast__content\">\n                        <!-- <p class=\"toast__type\" style=\"background-color:transparent !important;\">Success</p> -->\n                        <p class=\"toast__message\" style=\"background-color:transparent !important;\">The Bottlebank <a class=\"linkItem\" ng-click=\"send({payload:obj.name})\" href=\"#\">{{obj.name}}</a> has an issue.</p>\n                    </div>\n                    <div class=\"toast__close\">\n                        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.642 15.642\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" enable-background=\"new 0 0 15.642 15.642\">\n                        <path fill-rule=\"evenodd\" d=\"M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z\"></path>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1520.5,
        "y": 711,
        "wires": [
            [
                "901bb4e0.373008",
                "42ca54b1.966d94"
            ]
        ]
    },
    {
        "id": "5093b9e6.6f2b7",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "fdbe1c8d.12372",
        "name": "Information of Interest",
        "order": 2,
        "width": "8",
        "height": "12",
        "format": "<div >\n    <br />\n    <br />\n    <hr style=\"color:#E0E0E0\"/>\n    \n    <br />\n    <h3>Available Spaces for Bottle Bank Installations</h3>\n    <br /><br />\n    <div style=\"text-align:left;\">\n        <h2>{{msg.payload[0].name.value}}</h2><br />\n        <p>{{msg.payload[0].abstract.value}}</p><br />\n        <p><b>Comment:</b>{{msg.payload[0].comment.value}}</p>\n    </div>\n    <div style=\"text-align:right;\">\n        <md-button style=\"margin-top:17px;\" class=\"fav-btn\" ng-click=\"send({payload:[msg.payload[0].name.value, 'previous' ]})\"><i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i></md-button>\n        <md-button class=\"fav-btn\" ng-click=\"send({payload:[msg.payload[0].name.value, 'next' ]})\"><i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></md-button>\n    </div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1920.5,
        "y": 945,
        "wires": [
            [
                "1e47b4c5.20d623"
            ]
        ]
    },
    {
        "id": "33bb6dd6.cc819a",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Sensor Detailed Information ",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1948.5,
        "y": 622,
        "wires": [
            []
        ]
    },
    {
        "id": "d34bad7a.2d3418",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 2752.5,
        "y": 553,
        "wires": []
    },
    {
        "id": "98d609c9.01da18",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "Sort by name, availability or status",
        "func": "if msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"name\" :\n    if msg[\"allUsedName\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['name'], reverse=True) \n        msg['allUsedName'] = False\n    else: \n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['name']) \n        msg['allUsedName'] = True\n\n    msg['payload'] = sortedList\n    return msg\n\nif msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"AvgFillingRatePerDay\" :\n    if msg[\"alltUsedAvailability\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['AvgFillingRatePerDay'], reverse=True)\n        msg[\"alltUsedAvailability\"] = False\n    else:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['AvgFillingRatePerDay'])\n        msg[\"alltUsedAvailability\"] = True\n\n    msg['payload'] = sortedList\n    return msg\n\nif msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"status\" :\n    if msg[\"allUsedStatus\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['status'], reverse=True)\n        msg[\"allUsedStatus\"] = False\n    else:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['status'])\n        msg[\"allUsedStatus\"] = True\n\n    msg['payload'] = sortedList\n    return msg\n\n\nreturn None  ",
        "outputs": 1,
        "x": 2469.5,
        "y": 553,
        "wires": [
            [
                "d34bad7a.2d3418",
                "1c12b98c.0f8926"
            ]
        ]
    },
    {
        "id": "727e66c.c73e118",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "Sort by name, availability or status",
        "func": "if msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"name\" :\n    if msg[\"mostUsedName\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['name'], reverse=True) \n        msg['mostUsedName'] = False\n    else: \n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['name']) \n        msg['mostUsedName'] = True\n\n    msg['payload'] = sortedList\n    return msg\n\nif msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"AvgFillingRatePerDay\" :\n    if msg[\"mostUsedAvailability\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['AvgFillingRatePerDay'], reverse=True)\n        msg[\"mostUsedAvailability\"] = False\n    else:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['AvgFillingRatePerDay'])\n        msg[\"mostUsedAvailability\"] = True\n\n    msg['payload'] = sortedList\n    return msg\n\nif msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"status\" :\n    if msg[\"mostUsedStatus\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['status'], reverse=True)\n        msg[\"mostUsedStatus\"] = False\n    else:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['status'])\n        msg[\"mostUsedStatus\"] = True\n\n    msg['payload'] = sortedList\n    return msg\n\n\nreturn None  ",
        "outputs": 1,
        "x": 2476,
        "y": 431,
        "wires": [
            [
                "784445fa.7e3594"
            ]
        ]
    },
    {
        "id": "9b23201f.9da2f",
        "type": "python3-function",
        "z": "227c356f.6f82e2",
        "name": "Sort by name, availability or status",
        "func": "if msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"name\" :\n    if msg[\"mostUnUsedName\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['name'], reverse=True) \n        msg['mostUnUsedName'] = False\n    else: \n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['name']) \n        msg['mostUnUsedName'] = True\n\n    msg['payload'] = sortedList\n    return msg\n\nif msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"AvgFillingRatePerDay\" :\n    if msg[\"mostUnUsedAvailability\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['AvgFillingRatePerDay'], reverse=True)\n        msg[\"mostUnUsedAvailability\"] = False\n    else:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['AvgFillingRatePerDay'])\n        msg[\"mostUnUsedAvailability\"] = True\n\n    msg['payload'] = sortedList\n    return msg\n\nif msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"status\" :\n    if msg[\"mostUnUsedStatus\"]:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['status'], reverse=True)\n        msg[\"mostUnUsedStatus\"] = False\n    else:\n        sortedList =  sorted(msg['payload'][2], key=lambda k: k['status'])\n        msg[\"mostUnUsedStatus\"] = True\n\n    msg['payload'] = sortedList\n    return msg\n\n\nreturn None  ",
        "outputs": 1,
        "x": 2472,
        "y": 487,
        "wires": [
            [
                "91e57ccb.c01528"
            ]
        ]
    },
    {
        "id": "49808f03.69e128",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Flow Context Variables For Sorting",
        "func": "flow.set('mostUsedName','nil');\nflow.set('mostUsedAvailability','nil');\nflow.set('mostUsedStatus', 'nil');\n\nflow.set('mostUnUsedName', 'nil');\nflow.set('mostUnUsedAvailability', 'nil');\nflow.set('mostUnUsedStatus', 'nil');\n\nflow.set('allUsedName', 'nil');\nflow.set('alltUsedAvailability', 'nil');\nflow.set('allUsedStatus', 'nil');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 364.5,
        "y": 516,
        "wires": [
            [
                "9effede1.facc08"
            ]
        ]
    },
    {
        "id": "9effede1.facc08",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 609.5,
        "y": 516,
        "wires": []
    },
    {
        "id": "dad4ab2b.d5ed5",
        "type": "ui_template",
        "z": "227c356f.6f82e2",
        "group": "9f8a630f.cd092",
        "name": "Footer",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\">\n  <div flex>\n        <div style=\"text-align:left;\">\n            <img src=\"https://st1.ning.com/topology/rest/1.0/file/get/1064781?profile=RESIZE_180x180\" alt=\"Fraunhofer IAIS\" style=\"object-fit:contain; width:160px; height:80px; align:right; \" />\n        </div>   \n  </div>\n  <div flex>\n    <div style=\"text-align:center;\">\n        <img src=\"https://st1.ning.com/topology/rest/1.0/file/get/8822449?profile=original&xn_version=201901290618\" width=\"160px\" height=\"80px\" style=\"object-fit:contain;   border-radius: 25px;\">\n    </div>\n  </div>\n  <div flex>\n    <div style=\"text-align:right;\">\n        <img src=\"https://www.grandlyon.com/typo3conf/ext/gl_metropole_template/Resources/Public/Images/Content/logo-grand-lyon-la-metropole.png\" alt=\"Grand Lyon\" style=\"object-fit:contain; width:160px; height:80px; align:right; \" />\n    </div>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1500.5,
        "y": 372,
        "wires": [
            []
        ]
    },
    {
        "id": "935ddde.bad7c2",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 626.5,
        "y": 398,
        "wires": []
    },
    {
        "id": "c78f07e9.d72fc",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "searchBottleBanks",
        "func": "\nif(typeof msg.payload[1] == \"string\" && msg.payload[0] == \"radio\")\n{\n    msg.payload = msg.payload[1]\n    msg.payload = { command:{search:msg.payload} };\n    return msg;\n}else\n{\n    msg.payload = \"\";\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1884,
        "y": 180,
        "wires": [
            [
                "b0fa0e9f.8bec9"
            ]
        ]
    },
    {
        "id": "adcc8463.948348",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "ASC/DESC Processing Function for MUBB",
        "func": "if(msg.payload[0] == \"sort\")\n{\n    if( msg.payload[1] == \"name\" && ( flow.get('mostUsedName') == \"nil\" || flow.get('mostUsedName') == \"True\" ) )\n    {\n        msg.mostUsedName = true ;\n        msg.mostUsedAvailability = true ;\n        msg.mostUsedStatus = true ;\n        flow.set('mostUsedAvailability','True');\n        flow.set('mostUsedStatus','True');\n        flow.set('mostUsedName','False');\n        \n    \n    }else if( msg.payload[1] == \"name\" && flow.get('mostUsedName') == \"False\" ) \n    {\n        msg.mostUsedName = false ;\n        msg.mostUsedAvailability = true ;\n        msg.mostUsedStatus = true ;\n        flow.set('mostUsedAvailability','True');\n        flow.set('mostUsedStatus','True');\n        flow.set('mostUsedName','True');\n    \n    }else if ( msg.payload[1] == \"AvgFillingRatePerDay\"  && ( flow.get('mostUsedAvailability') == \"nil\" || flow.get('mostUsedAvailability') == \"True\" ) )\n    {\n        msg.mostUsedAvailability = true ;\n        msg.mostUsedName = true ;\n        msg.mostUsedStatus = true ;\n        flow.set('mostUsedName','True');\n        flow.set('mostUsedStatus','True');\n        flow.set('mostUsedAvailability','False');\n        \n    }else if( msg.payload[1] == \"AvgFillingRatePerDay\"  && flow.get('mostUsedAvailability') == \"False\"  )\n    {\n        msg.mostUsedName = true ;\n        msg.mostUsedStatus = true ;\n        flow.set('mostUsedName','True');\n        msg.mostUsedAvailability = false ;\n        flow.set('mostUsedStatus','True');\n        flow.set('mostUsedAvailability','True');\n        \n    }else if ( msg.payload[1] == \"status\"  && ( flow.get('mostUsedStatus') == \"nil\" || flow.get('mostUsedStatus') == \"True\" ) )\n    {\n        msg.mostUsedStatus = true ;\n        msg.mostUsedAvailability = true ;\n        msg.mostUsedName = true ;\n        flow.set('mostUsedName','True');\n        flow.set('mostUsedAvailability','True');\n        flow.set('mostUsedStatus','False');\n        \n    }else if( msg.payload[1] == \"status\"  && flow.get('mostUsedStatus') == \"False\"  )\n    {\n        msg.mostUsedStatus = false ;\n        msg.mostUsedName = true ;\n        flow.set('mostUsedName','True');\n        msg.mostUsedAvailability = true ;\n        flow.set('mostUsedAvailability','True');\n        flow.set('mostUsedStatus','True');\n    \n    }\n  \n    \n    msg.default = msg.payload[3];\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1992.5,
        "y": 428,
        "wires": [
            [
                "727e66c.c73e118"
            ]
        ]
    },
    {
        "id": "d296cd09.88c21",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "ASC/DESC Processing Function for MUUB",
        "func": "if(msg.payload[0] == \"sort\")\n{\n    if( msg.payload[1] == \"name\" && ( flow.get('mostUnUsedName') == \"nil\" || flow.get('mostUnUsedName') == \"True\" ) )\n    {\n        msg.mostUnUsedName = true ;\n        msg.mostUnUsedAvailability = true ;\n        msg.mostUnUsedStatus = true ;\n        flow.set('mostUnUsedAvailability','True');\n        flow.set('mostUnUsedStatus','True');\n        flow.set('mostUnUsedName','False');\n        \n    \n    }else if( msg.payload[1] == \"name\" && flow.get('mostUnUsedName') == \"False\" ) \n    {\n        msg.mostUnUsedName = false ;\n        msg.mostUnUsedAvailability = true ;\n        msg.mostUnUsedStatus = true ;\n        flow.set('mostUnUsedAvailability','True');\n        flow.set('mostUnUsedStatus','True');\n        flow.set('mostUnUsedName','True');\n    \n    }else if ( msg.payload[1] == \"AvgFillingRatePerDay\"  && ( flow.get('mostUnUsedAvailability') == \"nil\" || flow.get('mostUnUsedAvailability') == \"True\" ) )\n    {\n        msg.mostUnUsedAvailability = true ;\n        msg.mostUnUsedName = true ;\n        msg.mostUnUsedStatus = true ;\n        flow.set('mostUnUsedName','True');\n        flow.set('mostUnUsedStatus','True');\n        flow.set('mostUnUsedAvailability','False');\n        \n    }else if( msg.payload[1] == \"AvgFillingRatePerDay\"  && flow.get('mostUnUsedAvailability') == \"False\"  )\n    {\n        msg.mostUnUsedName = true ;\n        msg.mostUnUsedStatus = true ;\n        flow.set('mostUnUsedName','True');\n        msg.mostUnUsedAvailability = false ;\n        flow.set('mostUnUsedStatus','True');\n        flow.set('mostUnUsedAvailability','True');\n        \n    }else if ( msg.payload[1] == \"status\"  && ( flow.get('mostUnUsedStatus') == \"nil\" || flow.get('mostUnUsedStatus') == \"True\" ) )\n    {\n        msg.mostUnUsedStatus = true ;\n        msg.mostUnUsedAvailability = true ;\n        msg.mostUnUsedName = true ;\n        flow.set('mostUnUsedName','True');\n        flow.set('mostUnUsedAvailability','True');\n        flow.set('mostUnUsedStatus','False');\n        \n    }else if( msg.payload[1] == \"status\"  && flow.get('mostUnUsedStatus') == \"False\"  )\n    {\n        msg.mostUnUsedStatus = false ;\n        msg.mostUnUsedName = true ;\n        flow.set('mostUnUsedName','True');\n        msg.mostUnUsedAvailability = true ;\n        flow.set('mostUnUsedAvailability','True');\n        flow.set('mostUnUsedStatus','True');\n    \n    }\n  \n    \n    msg.default = msg.payload[3];\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1993,
        "y": 491,
        "wires": [
            [
                "9b23201f.9da2f"
            ]
        ]
    },
    {
        "id": "52d5b8db.086608",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "ASC/DESC Processing Function for ALL",
        "func": "if(msg.payload[0] == \"sort\")\n{\n    if( msg.payload[1] == \"name\" && ( flow.get('allUsedName') == \"nil\" || flow.get('allUsedName') == \"True\" ) )\n    {\n        msg.allUsedName = true ;\n        msg.alltUsedAvailability = true ;\n        msg.allUsedStatus = true ;\n        flow.set('alltUsedAvailability','True');\n        flow.set('allUsedStatus','True');\n        flow.set('allUsedName','False');\n        \n    \n    }else if( msg.payload[1] == \"name\" && flow.get('allUsedName') == \"False\" ) \n    {\n        msg.allUsedName = false ;\n        msg.alltUsedAvailability = true ;\n        msg.allUsedStatus = true ;\n        flow.set('alltUsedAvailability','True');\n        flow.set('allUsedStatus','True');\n        flow.set('allUsedName','True');\n    \n    }else if ( msg.payload[1] == \"AvgFillingRatePerDay\"  && ( flow.get('alltUsedAvailability') == \"nil\" || flow.get('alltUsedAvailability') == \"True\" ) )\n    {\n        msg.alltUsedAvailability = true ;\n        msg.allUsedName = true ;\n        msg.allUsedStatus = true ;\n        flow.set('allUsedName','True');\n        flow.set('allUsedStatus','True');\n        flow.set('alltUsedAvailability','False');\n        \n    }else if( msg.payload[1] == \"AvgFillingRatePerDay\"  && flow.get('alltUsedAvailability') == \"False\"  )\n    {\n        msg.allUsedName = true ;\n        msg.allUsedStatus = true ;\n        flow.set('allUsedName','True');\n        msg.alltUsedAvailability = false ;\n        flow.set('allUsedStatus','True');\n        flow.set('alltUsedAvailability','True');\n        \n    }else if ( msg.payload[1] == \"status\"  && ( flow.get('allUsedStatus') == \"nil\" || flow.get('allUsedStatus') == \"True\" ) )\n    {\n        msg.allUsedStatus = true ;\n        msg.alltUsedAvailability = true ;\n        msg.allUsedName = true ;\n        flow.set('allUsedName','True');\n        flow.set('alltUsedAvailability','True');\n        flow.set('allUsedStatus','False');\n        \n    }else if( msg.payload[1] == \"status\"  && flow.get('allUsedStatus') == \"False\"  )\n    {\n        msg.allUsedStatus = false ;\n        msg.allUsedName = true ;\n        flow.set('allUsedName','True');\n        msg.alltUsedAvailability = true ;\n        flow.set('alltUsedAvailability','True');\n        flow.set('allUsedStatus','True');\n    \n    }\n  \n    \n    msg.default = msg.payload[3];\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1993,
        "y": 554,
        "wires": [
            [
                "98d609c9.01da18",
                "b1075c3f.9e734"
            ]
        ]
    },
    {
        "id": "1d670dd.880b1f2",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Clear MUUB",
        "func": "\nif(typeof msg.payload[1] == \"string\" && msg.payload[0] == \"radio\")\n{\n    msg.default = \"\";\n    msg[\"mostUnUsedName\"] = true ;\n    msg[\"mostUnUsedAvailability\"] = true ;\n    msg[\"mostUnUsedStatus\"] = true ;\n    msg.payload = flow.get(\"MUUB\");\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1894.5,
        "y": 715,
        "wires": [
            [
                "91e57ccb.c01528"
            ]
        ]
    },
    {
        "id": "3cedb773.2ae068",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Set Context MUBB",
        "func": "flow.set('MUBB', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1315.5,
        "y": 427,
        "wires": [
            [
                "784445fa.7e3594"
            ]
        ]
    },
    {
        "id": "c5572698.13ca6",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Set Context MUUB",
        "func": "flow.set('MUUB', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1316,
        "y": 487,
        "wires": [
            [
                "91e57ccb.c01528"
            ]
        ]
    },
    {
        "id": "3e86490a.aa555e",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Set Context ALL",
        "func": "flow.set('ALL', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1301,
        "y": 552,
        "wires": [
            [
                "1c12b98c.0f8926"
            ]
        ]
    },
    {
        "id": "ade956d0.57aba",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Clear ALL",
        "func": "\nif(typeof msg.payload[1] == \"string\" && msg.payload[0] == \"radio\")\n{\n    msg.default = \"\";\n    msg[\"allUsedName\"] = true ;\n    msg[\"alltUsedAvailability\"] = true ;\n    msg[\"allUsedStatus\"] = true ;\n    msg.payload = flow.get(\"ALL\");\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2099,
        "y": 718,
        "wires": [
            [
                "1c12b98c.0f8926"
            ]
        ]
    },
    {
        "id": "e99f16b5.8a45e",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Clear MUBB",
        "func": "\nif(typeof msg.payload[1] == \"string\" && msg.payload[0] == \"radio\")\n{\n    msg.default = \"\";\n    msg.payload = flow.get(\"MUBB\");\n    msg[\"mostUsedName\"] = true ;\n    msg[\"mostUsedAvailability\"] = true ;\n    msg[\"mostUsedStatus\"] = true ;\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2321,
        "y": 720,
        "wires": [
            [
                "784445fa.7e3594"
            ]
        ]
    },
    {
        "id": "b1075c3f.9e734",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 2319.5,
        "y": 642,
        "wires": []
    },
    {
        "id": "21c94b95.f4cb54",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1324.5,
        "y": 285,
        "wires": []
    },
    {
        "id": "901bb4e0.373008",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1515.5,
        "y": 779,
        "wires": []
    },
    {
        "id": "42ca54b1.966d94",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "searchBottleBanks",
        "func": "\nif( typeof msg.payload == \"string\" )\n{\n    msg.payload = msg.payload\n    msg.payload = { command:{search:msg.payload} };\n    return msg;\n}else\n{\n    msg.payload = \"\";\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1530,
        "y": 840,
        "wires": [
            [
                "b0fa0e9f.8bec9"
            ]
        ]
    },
    {
        "id": "a8cfc8f7.d6981",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Bottle Bank Information Processing For Detail",
        "func": "if(typeof msg.payload[1] == \"string\" && msg.payload[0] == \"radio\")\n{\n    msg.payload = msg.payload[2] ;\n    return msg ;\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2003.5,
        "y": 801,
        "wires": [
            [
                "eb731dd2.cb6e98"
            ]
        ]
    },
    {
        "id": "17526246.ec0cc6",
        "type": "debug",
        "z": "227c356f.6f82e2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2637.5,
        "y": 799,
        "wires": []
    },
    {
        "id": "f45243bc.04483",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "searchBottleBanks",
        "func": "\nif(typeof msg.payload == \"string\" )\n{\n    msg.payload = msg.payload\n    msg.payload = { command:{search:msg.payload} };\n    return msg;\n}else\n{\n    msg.payload = \"\";\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1897,
        "y": 229,
        "wires": [
            [
                "b0fa0e9f.8bec9"
            ]
        ]
    },
    {
        "id": "53b1c8b6.00ab2",
        "type": "sparql",
        "z": "227c356f.6f82e2",
        "name": "Open Area For Sensor Installation 1",
        "prefix": "http://dbpedia.org/sparql",
        "func": "select DISTINCT * where {\n\nVALUES ?city {<http://dbpedia.org/resource/Parc_Saint-Clair>}\n\n\n?city rdfs:label ?name .\n?city dbo:abstract ?abstract .\n?city rdfs:comment ?comment .\n\nFILTER((LANG(?name) = \"\" || LANGMATCHES(LANG(?name), \"en\")) and (LANG(?abstract) = \"\" || LANGMATCHES(LANG(?abstract), \"en\")) and (LANG(?comment) = \"\" || LANGMATCHES(LANG(?comment), \"en\")))\n}",
        "outputs": 1,
        "x": 998,
        "y": 947,
        "wires": [
            [
                "5e0f371b.ae3738"
            ]
        ]
    },
    {
        "id": "f49f0767.ccee18",
        "type": "sparql",
        "z": "227c356f.6f82e2",
        "name": "Open Area For Sensor Installation 2",
        "prefix": "http://dbpedia.org/sparql",
        "func": "select DISTINCT * where {\n\nVALUES ?city {<http://dbpedia.org/resource/Parc_de_Gerland>}\n\n\n?city rdfs:label ?name .\n?city dbo:abstract ?abstract .\n?city rdfs:comment ?comment .\n\nFILTER((LANG(?name) = \"\" || LANGMATCHES(LANG(?name), \"en\")) and (LANG(?abstract) = \"\" || LANGMATCHES(LANG(?abstract), \"en\")) and (LANG(?comment) = \"\" || LANGMATCHES(LANG(?comment), \"en\")))\n}",
        "outputs": 1,
        "x": 1002.5,
        "y": 995,
        "wires": [
            [
                "b14496ed.4a1528"
            ]
        ]
    },
    {
        "id": "bcad55e.304ff28",
        "type": "sparql",
        "z": "227c356f.6f82e2",
        "name": "Open Area For Sensor Installation 3",
        "prefix": "http://dbpedia.org/sparql",
        "func": "select DISTINCT * where {\n\nVALUES ?city {<http://dbpedia.org/resource/Parc_de_la_Cerisaie>}\n\n\n?city rdfs:label ?name .\n?city dbo:abstract ?abstract .\n?city rdfs:comment ?comment .\n\nFILTER((LANG(?name) = \"\" || LANGMATCHES(LANG(?name), \"en\")) and (LANG(?abstract) = \"\" || LANGMATCHES(LANG(?abstract), \"en\")) and (LANG(?comment) = \"\" || LANGMATCHES(LANG(?comment), \"en\")))\n}",
        "outputs": 1,
        "x": 1001.5,
        "y": 1044,
        "wires": [
            [
                "6c7f1412.40c39c"
            ]
        ]
    },
    {
        "id": "6c7f1412.40c39c",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Flow SetContext SPARQL3",
        "func": "flow.set(\"Area3\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1353.5,
        "y": 1044,
        "wires": [
            []
        ]
    },
    {
        "id": "b14496ed.4a1528",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Flow SetContext SPARQL2",
        "func": "flow.set(\"Area2\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1353.5,
        "y": 996,
        "wires": [
            []
        ]
    },
    {
        "id": "5e0f371b.ae3738",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Flow SetContext SPARQL1",
        "func": "flow.set(\"Area1\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1356,
        "y": 946,
        "wires": [
            [
                "5093b9e6.6f2b7"
            ]
        ]
    },
    {
        "id": "1e47b4c5.20d623",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Current Area",
        "func": "if( msg.payload[0] == \"Parc de Gerland\" && msg.payload[1] == \"next\" )\n{   \n    msg.area = 2 ;\n    return msg;\n}\n\nif( msg.payload[0] == \"Parc Saint-Clair\" && msg.payload[1] == \"next\" )\n{    \n    msg.area = 3 ;\n    return msg;\n}\n\nif( msg.payload[0] == \"Parc de la Cerisaie\" && msg.payload[1] == \"next\" )\n{    \n    msg.area = 1 ;\n    return msg;\n}\n\nif( msg.payload[0] == \"Parc de Gerland\" && msg.payload[1] == \"previous\" )\n{    \n    msg.area = 3 ;\n    return msg;\n}\n\nif( msg.payload[0] == \"Parc Saint-Clair\" && msg.payload[1] == \"previous\" )\n{    \n    msg.area = 1 ;\n    return msg;\n}\n\nif( msg.payload[0] == \"Parc de la Cerisaie\" && msg.payload[1] == \"previous\" )    \n{    msg.area = 2 ;\n    return msg;\n}\n\nreturn null\n    \n",
        "outputs": 1,
        "noerr": 0,
        "x": 2339,
        "y": 945,
        "wires": [
            [
                "c0199c12.3e9b",
                "bb0b348d.8814e8",
                "b59ed16e.85b3b8"
            ]
        ]
    },
    {
        "id": "b59ed16e.85b3b8",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Area 3",
        "func": "if( msg.area == 3)\n{\n    msg.payload = flow.get(\"Area3\");\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 2512.5,
        "y": 1046,
        "wires": [
            [
                "5093b9e6.6f2b7"
            ]
        ]
    },
    {
        "id": "bb0b348d.8814e8",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Area 2",
        "func": "if( msg.area == 2)\n{\n    msg.payload = flow.get(\"Area2\");\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 2508.5,
        "y": 998,
        "wires": [
            [
                "5093b9e6.6f2b7"
            ]
        ]
    },
    {
        "id": "c0199c12.3e9b",
        "type": "function",
        "z": "227c356f.6f82e2",
        "name": "Area1",
        "func": "if( msg.area == 1)\n{\n    msg.payload = flow.get(\"Area1\");\n    return msg;\n}\n    \nreturn null;",
        "outputs": "1",
        "noerr": 0,
        "x": 2502.5,
        "y": 948,
        "wires": [
            [
                "5093b9e6.6f2b7"
            ]
        ]
    },
    {
        "id": "2a96a6b.e4a8f5a",
        "type": "ui_group",
        "z": "",
        "name": "Most Used Bottlebanks",
        "tab": "573b5d16.62d4a4",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "36c537b8.bb60a",
        "type": "ui_group",
        "z": "",
        "name": "Most Unused Bottlebanks",
        "tab": "573b5d16.62d4a4",
        "order": 6,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "2bf5b08a.1fab",
        "type": "ui_group",
        "z": "",
        "name": "Status of Bottle Banks",
        "tab": "573b5d16.62d4a4",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "d11829dc.62b3a",
        "type": "ui_group",
        "z": "",
        "name": "Bottlebanks on Worldmap",
        "tab": "573b5d16.62d4a4",
        "order": 4,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "bf26c53c.9645f8",
        "type": "ui_group",
        "z": "",
        "name": "Detailed Information Bottle Bank",
        "tab": "573b5d16.62d4a4",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "fdbe1c8d.12372",
        "type": "ui_group",
        "z": "",
        "name": "Notifications",
        "tab": "573b5d16.62d4a4",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "9f8a630f.cd092",
        "type": "ui_group",
        "z": "",
        "name": "Footer",
        "tab": "573b5d16.62d4a4",
        "order": 7,
        "disp": false,
        "width": "32",
        "collapse": false
    },
    {
        "id": "573b5d16.62d4a4",
        "type": "ui_tab",
        "z": "",
        "name": "Bottlebank Waste Management Dashboard",
        "icon": "dashboard",
        "order": 6
    }
]
