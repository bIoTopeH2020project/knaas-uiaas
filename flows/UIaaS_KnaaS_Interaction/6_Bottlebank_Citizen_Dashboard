[
    {
        "id": "dcf54892.c255c",
        "type": "tab",
        "label": "6_Bottlebank_Citizen_Dashboard"
    },
    {
        "id": "aef54a5e.bff3b8",
        "type": "inject",
        "z": "dcf54892.c255c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 109,
        "y": 315,
        "wires": [
            [
                "78e2e706.da012",
                "8899543e.80664"
            ]
        ]
    },
    {
        "id": "78e2e706.da012",
        "type": "omiNodeV9",
        "z": "dcf54892.c255c",
        "name": "BottleBank O-MI Node",
        "path_InfoItem": "https://biotope-omi.alpha.grandlyon.com/Objects/Organization:SigrenEa-V1.1.0",
        "token": "",
        "operations": "Read",
        "ttl": "-1",
        "interval": "",
        "callback": "",
        "newest": "",
        "oldest": "",
        "begin": "",
        "end": "",
        "value": "",
        "reqID": "",
        "metadata": true,
        "readTypes": "read1time",
        "x": 276.44439697265625,
        "y": 234.11111450195312,
        "wires": [
            [
                "7a0a396b.c5cdc8",
                "c377ad50.c04078"
            ]
        ]
    },
    {
        "id": "7a0a396b.c5cdc8",
        "type": "xml",
        "z": "dcf54892.c255c",
        "name": "BottleBank O-DF structure to JSON",
        "attr": "",
        "chr": "",
        "x": 577.7777557373047,
        "y": 245.11111450195312,
        "wires": [
            [
                "873e1215.c0b058",
                "8f84552b.d654a"
            ]
        ]
    },
    {
        "id": "873e1215.c0b058",
        "type": "python3-function",
        "z": "dcf54892.c255c",
        "name": "Extract response from BottleBank O-MI Respnse",
        "func": "#taking response value \n#Note in response first is longitude --> 0 and latitude -->1\nimport copy\n\nresponse = msg[\"payload\"][\"omiEnvelope\"][\"response\"][0][\"result\"][0][\"return\"][0][\"$\"][\"returnCode\"];\nlistOfBottleBankItems = []\nbottleBankList = availableBB = []\nbottleBankProperty = bottleBankName = bottleBankMaxCapacity = bottleBankGlass = bottleBankWastePoint = bottleBankAvgFillingRatePerDay = bottleBankFillingLimit = None \nlongitude = latitude = name = statusBB = identifier = None \ntemp = [] \n\nif response == \"200\":\n    node.log(\"Extract Response O-MI Node: Success in reading O-MI Node Contents\")\n \n    bottleBankObject = msg[\"payload\"][\"omiEnvelope\"][\"response\"][0][\"result\"][0][\"msg\"][0][\"Objects\"][0][\"Object\"][0][\"Object\"];\n    \n    for items in bottleBankObject:\n        if items[\"$\"][\"type\"] == \"ssn:Deployment\" :\n            bottleBankList = items[\"Object\"] \n        elif items[\"$\"] == \"org:Site\" :\n            siteMetaData = items\n        \n\n    for nodes in bottleBankList:\n        if (\"Object\" in nodes) and (\"$\" in nodes): \n            if nodes[\"$\"][\"type\"]: \n                node.log(\"From the communcation device\")\n                nodeObject = nodes[\"Object\"][0][\"Object\"][0][\"Object\"]\n        \n        for things in nodeObject:\n            if (\"$\" in things) and (\"InfoItem\" in things) :\n                if things[\"$\"][\"type\"] == \"ssn:Property\":\n                    bottleBankProperty = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n                elif things['$'][\"type\"] == \"SWM:MaxCapacity\":\n                    bottleBankMaxCapacity = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n                elif things['$'][\"type\"] ==  \"SWM:Glass\":\n                    bottleBankGlass = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n                elif things['$'][\"type\"] ==  \"SWM:WastePoint\":\n                    for coords in  things[\"InfoItem\"]:\n                        if coords[\"$\"][\"name\"] == \"geo:lat\":\n                            latitude = coords[\"value\"][0][\"_\"]\n                        elif coords[\"$\"][\"name\"] == \"geo:long\":\n                            longitude = coords[\"value\"][0][\"_\"]\n                        elif coords[\"$\"][\"name\"] == \"schema:name\":\n                            name = coords[\"value\"][0][\"_\"]\n                        elif coords[\"$\"][\"name\"] == \"schema:identifier\":\n                            identifier = coords[\"value\"][0][\"_\"]\n                        \n                elif things['$'][\"type\"] ==  \"SWM:AvgFillingRatePerDay\":\n                    bottleBankAvgFillingRatePerDay = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n                elif things['$'][\"type\"] == \"SWM:FillingLimit\":\n                    bottleBankFillingLimit = things[\"InfoItem\"][0][\"value\"][0][\"_\"]\n          \n        if bottleBankAvgFillingRatePerDay == 0:\n            statusBB == \"empty\"\n        if bottleBankAvgFillingRatePerDay == 100:\n            statusBB == \"full\"\n        if bottleBankAvgFillingRatePerDay == 50:\n            statusBB == \"half\"\n        if bottleBankAvgFillingRatePerDay > 0 and bottleBankAvgFillingRatePerDay < 50:\n            statusBB = \"less than half\"\n        if bottleBankAvgFillingRatePerDay > 50 and bottleBankAvgFillingRatePerDay < 100:\n            statusBB == \"more than half\"\n         \n        listOfBottleBankItems.append({\"Property\": bottleBankProperty, \"MaximumCapacity\": bottleBankMaxCapacity, \"Glass\": bottleBankGlass, \"AvgFillingRatePerDay\": bottleBankAvgFillingRatePerDay, \"FillingLimit\": bottleBankFillingLimit, \"lat\": latitude, \"lon\": longitude, \"name\": name, \"identifier\": identifier, \"status\": statusBB }) \n        availableBB.append({\"Property\": bottleBankProperty, \"MaximumCapacity\": bottleBankMaxCapacity, \"Glass\": bottleBankGlass, \"AvgFillingRatePerDay\": bottleBankAvgFillingRatePerDay, \"FillingLimit\": bottleBankFillingLimit, \"lat\": latitude, \"lon\": longitude, \"name\": name, \"identifier\": identifier }) \n        \n        bottleBankProperty = bottleBankName = bottleBankMaxCapacity = bottleBankGlass = bottleBankWastePoint = bottleBankAvgFillingRatePerDay = bottleBankFillingLimit = None \n        longitude = latitude = name = statusBB = identifier = None \n        node.log(\"\");\n\n \nelse:\n    node.error(\"Extract Response O-MI Node: Failure in reading O-MI Node Contents\")\n\n\nmsg[\"payload\"] = listOfBottleBankItems\n#msg[\"payload\"] = coords\nreturn msg",
        "outputs": 1,
        "x": 590.5557098388672,
        "y": 290,
        "wires": [
            [
                "e6ff5973.36f5a8",
                "aa6a7163.f45df8",
                "f9f2d37d.7f9068",
                "f60b678b.2f4448",
                "c6aae731.b885e"
            ]
        ]
    },
    {
        "id": "66df11a9.c360a8",
        "type": "worldmap",
        "z": "dcf54892.c255c",
        "name": "",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "path": "",
        "x": 1213.5555419921875,
        "y": 128.11114501953125,
        "wires": []
    },
    {
        "id": "e6ff5973.36f5a8",
        "type": "python3-function",
        "z": "dcf54892.c255c",
        "name": "parseForTheWorldMap",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 902.7777252197266,
        "y": 245.22227382659912,
        "wires": [
            [
                "66df11a9.c360a8"
            ]
        ]
    },
    {
        "id": "6d01a93a.eb51a8",
        "type": "ui_form",
        "z": "dcf54892.c255c",
        "name": "",
        "label": "",
        "group": "a952c7e8.0fc39",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Comment",
                "value": "",
                "type": "text",
                "required": true
            }
        ],
        "formValue": {
            "": ""
        },
        "payload": "",
        "submit": "SUBMIT",
        "cancel": "CANCEL",
        "topic": "",
        "x": 1247.7777099609375,
        "y": 322.55555725097656,
        "wires": [
            []
        ]
    },
    {
        "id": "cfeeeecb.f9d47",
        "type": "ui_template",
        "z": "dcf54892.c255c",
        "group": "b213db72.04cdb",
        "name": "WorldMap",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<iframe src=\"http://127.0.0.1:1880/worldmap/\" height=\"658\" width=\"1482\">\n <p>Your browser does not support iframes.</p>\n</iframe>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1267.7777862548828,
        "y": 272.5555567741394,
        "wires": [
            []
        ]
    },
    {
        "id": "c377ad50.c04078",
        "type": "function",
        "z": "dcf54892.c255c",
        "name": "move and zoom",
        "func": "msg.payload = { command:{layer:\"Esri Terrain\",lat:61.0,lon:23.0,zoom:3} };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 473.77777099609375,
        "y": 129.7777819633484,
        "wires": [
            [
                "66df11a9.c360a8"
            ]
        ]
    },
    {
        "id": "ab82715.94b5e1",
        "type": "inject",
        "z": "dcf54892.c255c",
        "name": "Inject This First",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 279.4444580078125,
        "y": 129.66673278808594,
        "wires": [
            [
                "c377ad50.c04078"
            ]
        ]
    },
    {
        "id": "ee153480.d83d18",
        "type": "ui_template",
        "z": "dcf54892.c255c",
        "group": "fc58a596.82d058",
        "name": "Favorite Bottle Banks List",
        "order": 1,
        "width": "13",
        "height": "7",
        "format": "<script>\n\n(function() {\n    \n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n             // Do something when msg arrives\n             scope.node = {\n              name : msg.payload.name,\n              identifier: msg.payload.identifier,\n              MaximumCapacity: msg.payload.MaximumCapacity, \n              FillingLimit: msg.payload.FillingLimit,\n              AvgFillingRatePerDay: msg.payload.AvgFillingRatePerDay , \n              lat: msg.payload.lon,\n              lon: msg.payload.lat\n             };\n            }\n    \n        });\n     \n    })(scope);\n    \n})();\n\n\n</script>\n\n<style type=\"text/css\" media=\"all\">\n    a {\n    }\n    a:hover {\n        color:#2AB672 ;\n    }\n</style>\n\n<div>\n    <h2><a ng-click=\"send({payload:node.name})\" >{{node.name}}</a></h2>\n <!--    <md-button ng-click=\"send({payload:node})\">{{node.name}}</md-button> -->\n    <h5><b>Identifier:</b>{{node.identifier}}</h5>\n    <h5><b>Maximum Capacity:</b> {{node.MaximumCapacity}}</h5>\n    <h5><b>Filling Limit:</b> {{node.FillingLimit}}</h5>\n    <h5><b>Average Filling Rate Per Day:</b> {{node.AvgFillingRatePerDay}}</h5>\n    <h5><b>Geo Coordinates(lon,lat):</b> {{node.lon}}, {{node.lat}}</h5>\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1299.22216796875,
        "y": 386.66668701171875,
        "wires": [
            [
                "a40d2f99.4d861",
                "d054bcce.d83228"
            ]
        ]
    },
    {
        "id": "5b17ff31.79d578",
        "type": "ui_template",
        "z": "dcf54892.c255c",
        "group": "a2abbec2.722b28",
        "name": "Status of Bottle Banks",
        "order": 2,
        "width": "9",
        "height": "26",
        "format": "<style>\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n    text-align: center;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */\n</style>\n<style>\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\" integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\" crossorigin=\"anonymous\">\n</style>\n\n<script>\n\n(function() {\n    \n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n             // Do something when msg arrives\n             scope.node = {\n              name : '',\n             };\n            }\n    \n        });\n     \n    })(scope);\n    \n})();\n</script>\n\n\n<form name=\"bbCitizenForm\" >\n<!-- <h5>Selected Road ID: {{node.name}}</h5> -->\n<table>\n<thead>\n  <tr>\n    <th></th>\n    <th><a ng-click=\"send({payload:['sort','name', msg.payload]})\">{{msg.name ? 'Name &#8593;' : 'Name &darr;' }}</a></th>\n    <th><a ng-click=\"send({payload:['sort','AvgFillingRatePerDay', msg.payload]})\">{{msg.availability ? 'Availability &#8593;' : 'Availability &darr;' }}</a></th>\n    <th>Mark as Favorite</th>\n  </tr>\n</thead>\n  <tr ng-repeat=\"obj in msg.payload track by $index\">\n    <td>\n    <input type=\"radio\" ng-model=\"node.name\" value=\"{{obj.name}}\"  name=\"data\"  ng-change=\"send({payload:['radio', obj.name, obj ]})\"></td>\n    <td>{{ obj.name }}</td>\n    <td>{{ obj.AvgFillingRatePerDay }}</td>\n    <td><md-button ng-click=\"send({payload:['button', obj.name, obj ]})\"><img width=\"30px\" height=\"30px\" ng-src=\"https://cdn2.vectorstock.com/i/1000x1000/35/71/isolated-yellow-star-icon-ranking-mark-vector-19283571.jpg\"/></md-button></td>\n  </tr>\n</table>\n </form>\n\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1290.2222900390625,
        "y": 452.111083984375,
        "wires": [
            [
                "6ffb6df1.0d2314",
                "472d141b.1496dc",
                "34c1b2f2.8bdfce"
            ]
        ]
    },
    {
        "id": "aa6a7163.f45df8",
        "type": "python3-function",
        "z": "dcf54892.c255c",
        "name": "List Extraction for Available Bottlebanks",
        "func": "sortedList =  sorted(msg['payload'], key=lambda k: k['name'])\n\nmsg[\"payload\"] = sortedList\nmsg[\"name\"] = True\nmsg[\"availability\"] = True\n\nreturn msg",
        "outputs": 1,
        "x": 940.77783203125,
        "y": 455.3333740234375,
        "wires": [
            [
                "5b17ff31.79d578",
                "1a8a1329.56c335"
            ]
        ]
    },
    {
        "id": "f60b678b.2f4448",
        "type": "python3-function",
        "z": "dcf54892.c255c",
        "name": "List Extraction for Favorite Bottlebanks",
        "func": "\nreturn msg",
        "outputs": 1,
        "x": 941.2222900390625,
        "y": 387.77777099609375,
        "wires": [
            [
                "ee153480.d83d18",
                "d054bcce.d83228"
            ]
        ]
    },
    {
        "id": "f9f2d37d.7f9068",
        "type": "debug",
        "z": "dcf54892.c255c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1060.611083984375,
        "y": 69.33334350585938,
        "wires": []
    },
    {
        "id": "c6aae731.b885e",
        "type": "sparql",
        "z": "dcf54892.c255c",
        "name": "",
        "prefix": "http://dbpedia.org/sparql",
        "func": "select DISTINCT * where {\n\nVALUES ?city {<http://dbpedia.org/resource/Parc_Saint-Clair>}\n\n\n?city rdfs:label ?name .\n?city dbo:abstract ?abstract .\n?city rdfs:comment ?comment .\n\nFILTER((LANG(?name) = \"\" || LANGMATCHES(LANG(?name), \"en\")) and (LANG(?abstract) = \"\" || LANGMATCHES(LANG(?abstract), \"en\")) and (LANG(?comment) = \"\" || LANGMATCHES(LANG(?comment), \"en\")))\n}",
        "outputs": 1,
        "x": 831.611083984375,
        "y": 532.3333740234375,
        "wires": [
            [
                "1c052847.f7ea78"
            ]
        ]
    },
    {
        "id": "8f84552b.d654a",
        "type": "debug",
        "z": "dcf54892.c255c",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 854.6111450195312,
        "y": 68.3333740234375,
        "wires": []
    },
    {
        "id": "6ffb6df1.0d2314",
        "type": "function",
        "z": "dcf54892.c255c",
        "name": "searchBottleBanks",
        "func": "\nif(typeof msg.payload[1] == \"string\" && msg.payload[0] == \"radio\")\n{\n    msg.payload = msg.payload[1]\n    msg.payload = { command:{search:msg.payload} };\n    return msg;\n}else\n{\n    msg.payload = \"\";\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1688,
        "y": 451,
        "wires": [
            [
                "66df11a9.c360a8",
                "9f1715d9.9f3a18"
            ]
        ]
    },
    {
        "id": "472d141b.1496dc",
        "type": "function",
        "z": "dcf54892.c255c",
        "name": "Mark Favorite BottleBank",
        "func": "if( msg.payload[0] == \"button\")\n{\n    msg.payload = msg.payload[2];\n    return msg;\n\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1702.5,
        "y": 388,
        "wires": [
            [
                "ee153480.d83d18",
                "a008115c.42971"
            ]
        ]
    },
    {
        "id": "d054bcce.d83228",
        "type": "debug",
        "z": "dcf54892.c255c",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 1616.5,
        "y": 92,
        "wires": []
    },
    {
        "id": "df8b37a5.fd2698",
        "type": "ui_template",
        "z": "dcf54892.c255c",
        "group": "a952c7e8.0fc39",
        "name": "Radio Items User Feedback",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n\n(function() {\n    \n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n             // Do something when msg arrives\n             scope.type = {\n              name : '',\n             };\n            }\n    \n        });\n     \n    })(scope);\n    \n})();\n</script>\n\n<div>\n<form name=\"myForm\">\n  <label>\n    <input type=\"radio\" ng-model=\"type.name\" name=\"feed\" value=\"Damaged\">\n    Damaged\n  </label><br/>\n  <label>\n    <input type=\"radio\" ng-model=\"type.name\" name=\"feed\" value=\"Full\">\n    Full\n  </label><br/>\n  <label>\n    <input type=\"radio\" ng-model=\"type.name\" name=\"feed\" value=\"Not in Place\">\n    Not in Place\n  </label><br/>\n </form>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1310.5,
        "y": 530,
        "wires": [
            []
        ]
    },
    {
        "id": "a40d2f99.4d861",
        "type": "function",
        "z": "dcf54892.c255c",
        "name": "locateFavoriteBottleBank",
        "func": "\nif(typeof msg.payload[1] == \"string\")\n{\n    msg.payload = msg.payload\n    msg.payload = { command:{search:msg.payload} };\n\n}else\n{\n    msg.payload = \"\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 893,
        "y": 330,
        "wires": [
            [
                "66df11a9.c360a8"
            ]
        ]
    },
    {
        "id": "1a8a1329.56c335",
        "type": "debug",
        "z": "dcf54892.c255c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1620.5,
        "y": 39,
        "wires": []
    },
    {
        "id": "a3d7c4b1.2c648",
        "type": "ui_template",
        "z": "dcf54892.c255c",
        "group": "9b052a38.cfee28",
        "name": "Footer",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div>\n\n</div>\n<div layout=\"row\">\n  <div flex>\n        <div style=\"text-align:left;\">\n            <img src=\"https://st1.ning.com/topology/rest/1.0/file/get/1064781?profile=RESIZE_180x180\" alt=\"Fraunhofer IAIS\" style=\"object-fit:contain; width:160px; height:80px; align:right; \" />\n        </div>   \n  </div>\n  <div flex>\n    <div style=\"text-align:center;\">\n        <img src=\"https://st1.ning.com/topology/rest/1.0/file/get/8822449?profile=original&xn_version=201901290618\" width=\"160px\" height=\"80px\" style=\"object-fit:contain;   border-radius: 25px;\">\n    </div>\n  </div>\n  <div flex>\n    <div style=\"text-align:right;\">\n        <img src=\"https://www.grandlyon.com/typo3conf/ext/gl_metropole_template/Resources/Public/Images/Content/logo-grand-lyon-la-metropole.png\" alt=\"Grand Lyon\" style=\"object-fit:contain; width:160px; height:80px; align:right; \" />\n    </div>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1238.5,
        "y": 597,
        "wires": [
            []
        ]
    },
    {
        "id": "1c052847.f7ea78",
        "type": "ui_template",
        "z": "dcf54892.c255c",
        "group": "67aedbd5.19758c",
        "name": "Area of Interest ",
        "order": 2,
        "width": "10",
        "height": "7",
        "format": "<div>\n<h2>{{msg.payload[0].name.value}}</h2><br />\n<p>{{msg.payload[0].abstract.value}}</p><br />\n<p><b>Comment:</b>{{msg.payload[0].comment.value}}</p><br /><br />\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1266.5,
        "y": 662,
        "wires": [
            []
        ]
    },
    {
        "id": "9f1715d9.9f3a18",
        "type": "debug",
        "z": "dcf54892.c255c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1864.5,
        "y": 42,
        "wires": []
    },
    {
        "id": "a008115c.42971",
        "type": "ui_toast",
        "z": "dcf54892.c255c",
        "position": "top right",
        "displayTime": "7",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "New Favorite Marked",
        "name": "Favorite Mark Feeedback ",
        "x": 1983.5,
        "y": 403,
        "wires": []
    },
    {
        "id": "721d608d.0abe9",
        "type": "debug",
        "z": "dcf54892.c255c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2002.5,
        "y": 526,
        "wires": []
    },
    {
        "id": "34c1b2f2.8bdfce",
        "type": "python3-function",
        "z": "dcf54892.c255c",
        "name": "Sort By Name, Availability or Status",
        "func": "if msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"name\" :\n    sortedList =  sorted(msg['payload'][2], key=lambda k: k['name']) \n    msg['payload'] = sortedList\n    return msg\n\nif msg['payload'][0] == \"sort\" and msg[\"payload\"][1] == \"AvgFillingRatePerDay\" :\n    sortedList =  sorted(msg['payload'][2], key=lambda k: k['AvgFillingRatePerDay']) \n    msg['payload'] = sortedList\n    return msg\n\nreturn None  ",
        "outputs": 1,
        "x": 1740.5,
        "y": 526,
        "wires": [
            [
                "721d608d.0abe9",
                "5b17ff31.79d578"
            ]
        ]
    },
    {
        "id": "8899543e.80664",
        "type": "function",
        "z": "dcf54892.c255c",
        "name": "Flow Context Variables For Sorting",
        "func": "flow.set('name','nil');\nflow.set('availability','nil');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 429,
        "wires": [
            []
        ]
    },
    {
        "id": "2f7852f4.7e461e",
        "type": "function",
        "z": "dcf54892.c255c",
        "name": "Processing Funtction for ASC/DESC",
        "func": "if( msg.payload[3] == \"mostUsedName\" )\n{\n    \n}else if ( msg.payload[3] == \"mostUsedAvailability\" )\n{\n    \n}else if ( msg.payload[3] == \"mostUsedStatus\" )\n{\n    \n}else if ( msg.payload[3] == \"mostUnUsedName\" )\n{\n    \n}else if ( msg.payload[3] == \"mostUnUsedAvailability\" )\n{\n    \n}else if ( msg.payload[3] == \"mostUnUsedStatus\" )\n{\n    \n}else if ( msg.payload[3] == \"allUsedName\" )\n{\n    \n}else if ( msg.payload[3] == \"alltUsedAvailability\" )\n{\n    \n}else if ( msg.payload[3] == \"allUsedStatus\" )\n{\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1756,
        "y": 599,
        "wires": [
            []
        ]
    },
    {
        "id": "a952c7e8.0fc39",
        "type": "ui_group",
        "z": "",
        "name": "User Feedback",
        "tab": "eb5eab69.d6cc78",
        "order": 5,
        "disp": true,
        "width": "23",
        "collapse": false
    },
    {
        "id": "b213db72.04cdb",
        "type": "ui_group",
        "z": "",
        "name": "Bottle Banks on World Map",
        "tab": "eb5eab69.d6cc78",
        "order": 4,
        "disp": true,
        "width": "23",
        "collapse": false
    },
    {
        "id": "fc58a596.82d058",
        "type": "ui_group",
        "z": "",
        "name": "Favorite Bottle Bank",
        "tab": "eb5eab69.d6cc78",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": false
    },
    {
        "id": "a2abbec2.722b28",
        "type": "ui_group",
        "z": "",
        "name": "Status of BottleBanks",
        "tab": "eb5eab69.d6cc78",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false
    },
    {
        "id": "9b052a38.cfee28",
        "type": "ui_group",
        "z": "",
        "name": "Footer",
        "tab": "eb5eab69.d6cc78",
        "order": 6,
        "disp": false,
        "width": "32",
        "collapse": false
    },
    {
        "id": "67aedbd5.19758c",
        "type": "ui_group",
        "z": "",
        "name": "Options for Installing New BottleBanks",
        "tab": "eb5eab69.d6cc78",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "eb5eab69.d6cc78",
        "type": "ui_tab",
        "z": "",
        "name": "Bottlebank Citizen Dashboard",
        "icon": "dashboard",
        "order": 5
    }
]
